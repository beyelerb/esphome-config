# https://github.com/airy10/esphome-m5stickC/blob/master/sample-config/m5stickc.yaml

substitutions:
  devicename: basement_leak_detector
  friendly_name: Basement Leak Detector
  device_description: Leak detector in basement utility room

esphome:
  name: $devicename
  comment: ${device_description}
  platform: ESP32
  board: m5stick-c
  platformio_options:
    upload_speed: 115200

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: .lan

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Basement Leak Det. Fallback AP"
    password: !secret fallback_ap_password

  manual_ip:
    static_ip: x.x.x.x
    gateway: x.x.x.x
    subnet: x.x.x.x

captive_portal:

logger:

# Enable Home Assistant API & OTA Updates
api:
  password: !secret api_password
ota:
  password: !secret ota_password

status_led:
  pin:
    number: GPIO10
    inverted: True

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

i2c:
   - id: bus_a
     sda: GPIO21
     scl: GPIO22
     scan: True

esp32_touch:
  #setup_mode: True
  iir_filter: 10ms

binary_sensor:


  - platform: gpio
    pin:
      number: GPIO37
      inverted: true
    id: button_a
    on_press:
      then:
        - switch.toggle: led1

  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    id: button_b
    on_press:
      then:
        - switch.toggle: led1



  - platform: status
    name: "${friendly_name} Status"

    
  - platform: esp32_touch
    name: "${friendly_name} Sensor"
    device_class: moisture
    id: leak
    pin: GPIO33
    threshold: 30
    on_press:
      - while:
          condition:
            binary_sensor.is_on: leak
          then:
          - switch.turn_on: led1
          - delay: 200ms
          - switch.turn_off: led1
          - delay: 100ms
          - switch.turn_on: led1
          - delay: 200ms
          - switch.turn_off: led1
          - delay: 400ms
    on_release:
      then:
        - switch.turn_off: led1

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime"

    # AXP192 power management - must be present to initialize TFT power on
  - platform: axp192
    address: 0x34
    i2c_id: bus_a
    update_interval: 30s
    battery_level:
      name: "${friendly_name} Battery Level"
      id: "m5stick_batterylevel"

  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome version"

switch:
  - platform: gpio
    pin:
      number: GPIO10
      inverted: true
    id: led1

font:
  - file: 'OpenSans-Regular.ttf'
    id: font1
    size: 66

# built-in 80x160 TFT
display:
  - platform: st7735
    cs_pin: GPIO5
    dc_pin: GPIO23
    reset_pin: GPIO18
    rotation: 180
    lambda: |-
      if (id(leak).state) {
        it.print(38, -24, id(font1), ST77XX_RED, TextAlign::TOP_CENTER, "W");
        it.print(38, 32, id(font1), ST77XX_RED, TextAlign::TOP_CENTER, "E");
        it.print(38, 85, id(font1), ST77XX_RED, TextAlign::TOP_CENTER, "T");
      } else {
        it.print(38, -24, id(font1), ST77XX_GREEN, TextAlign::TOP_CENTER, "D");
        it.print(38, 32, id(font1), ST77XX_GREEN, TextAlign::TOP_CENTER, "R");
        it.print(38, 85, id(font1), ST77XX_GREEN, TextAlign::TOP_CENTER, "Y");
      }