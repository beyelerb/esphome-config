substitutions:
  system_name: m5stick
  friendly_name: M5StickC
  device_description: "Template configuration for a M5StickC."

esphome:
  name: "esph_${system_name}"
  comment: ${device_description}
  platform: ESP32
  board: m5stick-c
  platformio_options:
    upload_speed: 115200

#binary_sensor:

  # - platform: gpio
  #   pin:
  #     number: GPIO37
  #     inverted: true
  #   name: ${upper_devicename} Button A
  #   on_press:
  #     then:
  #       - light.turn_on: led1
  #   on_release:
  #     then:
  #       - light.turn_off: led1
        
  # - platform: gpio
  #   pin:
  #     number: GPIO39
  #     inverted: true
  #   name: ${upper_devicename} Button B
  #   on_press:
  #     then:
  #       - light.turn_on: led1
  #   on_release:
  #     then:
  #       - light.turn_off: led1

# internal LED
light:
  - platform: monochromatic
    output:  builtin_led
    name: ${upper_devicename} Led
    id: led1

output:
  - platform: ledc
    pin: 10
    inverted: true
    id: builtin_led

# internal IR Transmitter
remote_transmitter:
  - pin:
      number: GPIO9
    carrier_duty_percent: 50%
    id: internal

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

i2c:
   - id: bus_a
     sda: GPIO21
     scl: GPIO22
     scan: True

# font:
#   - file: 'arial.ttf'
#     id: font1
#     size: 8

#   - file: 'arial.ttf'
#     id: font2
#     size: 36

#   - file: 'arial.ttf'
#     id: font3
#     size: 14

# display:
#   - platform: st7735
#     cs_pin: GPIO5
#     dc_pin: GPIO23
#     reset_pin: GPIO18
#     rotation: 270
#     lambda: |-
#       it.print(80, 0, id(font1), ST77XX_WHITE, TextAlign::TOP_CENTER, "M5Stick Test");
#       if (id(wifi_dbm).has_state()) {
#         char str[128];
#         sprintf(str, "%.0f dBm", id(wifi_dbm).state);
#         it.print(80, 40, id(font2), ST77XX_RED, TextAlign::CENTER, str);
#         //it.print(80, 40, id(font2), ST77XX_RED, TextAlign::CENTER,  "%.0f dBm", id(wifi_dbm).state);
#       } else {
#         it.print(80, 40, id(font2), ST77XX_RED, TextAlign::CENTER, "No Wifi");
#       }
#       // Print time in HH:MM format
#       it.strftime(80, 60, id(font3), ST77XX_BLUE, TextAlign::TOP_CENTER, "%H:%M", id(sntp_time).now());